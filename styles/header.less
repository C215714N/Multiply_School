// Variables LESS
    @path: '../assets/bg';
    @images: 
        'osx-big-sur.jpg',
        'osx-big-sur-night.jpg',
        'osx-catalina.jpg',
        'osx-catalina-night.jpg',
        'osx-el-capitan.jpg',
        'osx-high-sierra.jpg',
        'osx-mavericks.jpg',
        'osx-mojave.jpg',
        'osx-mojave-night.jpg',
        'osx-mountain-lion.jpg',
        'osx-sierra.jpg',
        'osx-yosemite.jpg';
    @main-bg: 
        'osx-big-sur-dark.jpg',
        'osx-big-sur-light.jpg',
        'osx-monterrey-dark.jpg',
        'osx-monterrey-light.jpg';
    @col: 24;
    @font: ~'min(calc(2vw + .5rem), 3rem)'; // implementacion de valor CSS
//  Nesting: Selectores que se implementan dentro de otros
    #header{
        .normalize(@p: 1rem);
        .flexbox(column; @ai: center);
        position: relative;
        min-height: min(100vh, 640px);
        color: var(--light);
        font-size: @font;
        text-align: center;
        text-shadow: 0 0 @font var(--dark);
        //Galeria de Imagenes
        .gallery{
            &:extend(.zeroize);
            li{
                &:extend(.cover);
                .bg(@images);
                background: #333 var(--bg) center/cover no-repeat;
                background-attachment: fixed;
                opacity: 0;
                transition: all 2s ease-out;
                &.active{
                    opacity: 1;
                }
            }
        }
        //Controles de Galeria
        .controls{
            .flexbox(@jc: center);
            .position(absolute, 0, 1.5rem, @va:bottom);
            width: 100%;
            button{
                .normalize(.2rem);
                width: 2rem;
                height: .2rem;
                opacity: .5;
                box-shadow: 0 0 .5rem var(--dark);
                &.active{
                    opacity: 1;
                    background-color: var(--light);
                }
            }
        }
        button.fas{
            .normalize(@p: 2rem);
            .position(absolute, @ha:bottom);
            color: var(--light);
            background-color: transparent;
            &.prev{
                left: 0;
            }
            &.next{
                right: 0;
            }
        }
    }
//  Mixins: Selectores que se anidan como reglas
    .zeroize{
        .normalize;
        list-style: none;
    }
    .cover{
        .position(absolute; @z:-1);
        width: 100%;
        height: 100%;
    }
//  Mixins Parametricos: Reciben valores para su aplicacion
    .normalize(@m:0; @p:0; @b:0){
        margin: @m;
        border: @b;
        padding: @p;
    }
    .flexbox(
        @fd: row;
        @jc: center;
        @ai: stretch;
        @fw: wrap;
        @d: flex
    ){
        display: @d;
        flex-direction: @fd;
        justify-content: @jc;
        align-items: @ai;
        flex-wrap: @fw;
    }
    .position(@p: relative; @x:0; @y:0; @z:0; @va:top; @ha:left){
        position: @p;
        @{va}: @y;
        @{ha}: @x;
        z-index: @z;
    }
// Mixin Recursivo: Reglas que se repiten en base a una condicion
.grid(@i:1) when (@i <= @col){
    .col-@{i}{
        width: percentage( (@i / @col) )
    }
    .grid(@i + 1);
}
/*Sistema de grillas*/
.grid;

// Imagenes de Fondo
    .bg(@array; @i:1) when (@i <= length(@array)){
        @img: extract(@array, @i); // 
        &:nth-child(@{i}){
            --bg: url('@{path}/@{img}');
        }
        .bg(@array; @i + 1);
    }